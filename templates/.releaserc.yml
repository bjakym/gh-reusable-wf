tagFormat: "${version}"
plugins:
  - - "@semantic-release/commit-analyzer"
    - preset: "eslint"
      releaseRules:
        - tag: "break"
          release: "major"
        - tag: "feat"
          release: "minor"
        - tag: "revert"
          release: "patch"
        - tag: "fix"
          release: "patch"
        - tag: "chore"
          release: "patch"
        - tag: "docs"
          release: "patch"
        - message: "*"
          release: "patch"
      parserOpts:
        noteKeywords: ["BREAKING CHANGE", "BREAKING CHANGES"]
  - - "@semantic-release/release-notes-generator"
    - preset: "conventionalcommits"
      parserOpts:
        noteKeywords: ["BREAKING CHANGE", "BREAKING CHANGES"]
      presetConfig:
        types:
          - type: "break"
            section: ":boom: Breaking Changes"
            hidden: false
          - type: "feat"
            section: ":sparkles: Features"
            hidden: false
          - type: "revert"
            section: ":bug: Reverts"
            hidden: false
          - type: "fix"
            section: ":bug: Bug Fixes"
            hidden: false
          - type: "chore"
            section: ":arrows_counterclockwise: Refactoring/Minor Updates"
            hidden: false
          - type: "docs"
            section: ":memo: Documentation"
            hidden: false
      writerOpts:
        commitPartial: |
          {{~!-- commit link --}}
          {{#if @root.linkReferences~}} 
          * [<code>{{shortHash}}</code>](
          {{~#if @root.repository}}
            {{~#if @root.host}}
              {{~@root.host}}/
            {{~/if}}
            {{~#if @root.owner}}
              {{~@root.owner}}/
            {{~/if}}
            {{~@root.repository}}
          {{~else}}
            {{~@root.repoUrl}}
          {{~/if}}/
          {{~@root.commit}}/{{hash}})
          {{~else}}
            {{~hash}}
          {{~/if}}
           - {{this.subject}}
  - - "@semantic-release/exec"
    - generateNotesCmd: |
        other_changes=$(git log $(git describe --tags --abbrev=0 @^)..@ --pretty=format:"%h - %s" --no-merges --invert-grep --grep="^break\|^feat\|^revert\|^fix\|^chore\|^docs")
        if [ -n "$other_changes" ]; then
          echo "<h3>:package: Other Changes</h3>"
          echo "<ul>"
          echo "$other_changes" | sed 's/^/<li>/' | sed 's/$/<\/li>/'
          echo "</ul>"
        fi
        contributors=$(git shortlog -sne $(git describe --tags --abbrev=0 @^)..@ | sed 's/>//g; s/<//g')
        if [ -n "$contributors" ]; then
          echo "<h3>:man_technologist: Contributors</h3>"
          echo "<ul>"
          echo "$contributors" | sed 's/^/<li>/; s/$/<\/li>/' | sed 's/\([[:alnum:]+\.\_\-]*@[[:alnum:]+\.\_\-]*\)/<code>\1<\/code>/'
          echo "</ul>"
        fi
  - "@semantic-release/github"
branches:
  - "main"
  - name: "alpha"
    prerelease: true